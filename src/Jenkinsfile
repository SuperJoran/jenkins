#!groovy


pipeline {
    agent { docker 'maven:3.3.3' }


    environment {
        AWS_ACCESS_KEY_ID = credentials('random-password')
    }

    stages {
        stage('build') {
            steps {
                sh 'mvn --version'

                sh '''
                                   echo "Multiline shell steps works too"
                                   ls -lah
                               '''
            }
        }

        stage('prepare') {

            steps {
                withCredentials([sshUserPrivateKey(keyFileVariable: 'THEKEY', credentialsId: '069bbb9e-74e7-43ce-8b10-a2be56119234')]) {

                    echo THEKEY
                    sh 'cat $THEKEY > git-ssh'
                    sh 'git init'
                    sh 'git config user.name "Jenkins"'
                    sh 'git config user.email "Jenkins@joran.be"'
                    sh 'echo "This is some text" > randomtext.txt'
                    sh 'git add randomtext.txt'
                    sh 'git commit -m "first commit"'
                    sh 'git remote rm origin'
                    sh 'git remote add origin git@github.com:SuperJoran/sdfqsdfs.git'
                    sh 'GIT_SSH_COMMAND="ssh -i git-ssh" git push -u origin master'

                }

            }
        }

        stage('deploy') {

            steps {
                timeout(time: 3, unit: 'MINUTES') {
                    echo 'Ha, I left you waiting!'
                    sh 'echo $AWS_ACCESS_KEY_ID'
                    echo AWS_ACCESS_KEY_ID
                    echo AWS_ACCESS_KEY_ID_PSW
                }
            }
        }
    }

    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'Success!'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}