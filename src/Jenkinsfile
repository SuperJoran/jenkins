#!groovy


pipeline {
    agent { docker 'maven:3.3.3' }

    stages {

        stage('Checkout') {
            steps {
                timestamps {
                    git(
                            url: 'git@github.com:SuperJoran/getting-started-wicket-openshift.git',
                            credentialsId: 'Jenkins123',
                            branch: 'master'
                    )
                }
            }
        }
        stage('build') {
            steps {
                sh 'mvn --version'

                sh '''
                                   echo "Multiline shell steps works too"
                                   ls -lah
                               '''
            }
        }

        stage('prepare') {

            steps {

                withCredentials([sshUserPrivateKey(keyFileVariable: 'THEKEY', credentialsId: 'Jenkins123')]) {
                    sh 'git --version'
                    sh 'echo $GIT_HOME'
                    sh 'git --version'

                    sh 'echo "$(cat $THEKEY)"'
                    sh 'git config user.name "Jenkins"'
                    sh 'git config user.email "Jenkins@joran.be"'

                    sh 'git config core.sshCommand \'ssh -i $THEKEY\''

                    sh 'mvn release:prepare'

                    sh 'git push'

                }

            }
        }

        stage('deploy') {

            steps {
                timeout(time: 3, unit: 'MINUTES') {
                    echo 'Ha, I left you waiting!'
                    sh 'echo $AWS_ACCESS_KEY_ID'
                    echo AWS_ACCESS_KEY_ID
                    echo AWS_ACCESS_KEY_ID_PSW
                }
            }
        }
    }

    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'Success!'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}